root: true
env:
  es2020: true
extends:
  - eslint:recommended
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
parser: "@typescript-eslint/parser"
parserOptions:
  project: src/tsconfig.json
  sourceType: module
  warnOnUnsupportedTypeScriptVersion: false
plugins: ["@typescript-eslint"]

rules:
  # Possible errors.
  no-console: [error, {allow: [error, warn]}]
  no-extra-semi: "off"
  no-template-curly-in-string: error
  require-atomic-updates: error

  # Best practices.
  accessor-pairs: error
  array-callback-return: error
  block-scoped-var: error
  consistent-return: error
  curly: [error, multi]
  default-case-last: error
  grouped-accessor-pairs: error
  no-alert: error
  no-caller: error
  no-case-declarations: "off"
  no-constructor-return: error
  no-else-return: error
  no-eval: error
  no-extend-native: error
  no-extra-bind: error
  no-extra-label: error
  no-floating-decimal: error
  no-implicit-coercion: error
  no-implicit-globals: error
  no-implied-eval: error
  no-iterator: error
  no-labels: error
  no-lone-blocks: error
  no-loop-func: error
  no-multi-spaces: error
  no-new: error
  no-new-func: error
  no-new-wrappers: error
  no-octal-escape: error
  no-proto: error
  no-script-url: error
  no-self-compare: error
  no-sequences: error
  no-throw-literal: error
  no-unmodified-loop-condition: error
  no-useless-call: error
  no-useless-concat: error
  no-useless-return: error
  no-void: error
  no-warning-comments: warn
  prefer-promise-reject-errors: error
  prefer-regex-literals: error
  wrap-iife: [error, inside]
  yoda: error

  # Strict mode.
  strict: [error, global]

  # Variables.
  no-label-var: error
  no-shadow: error
  no-undef-init: error
  no-unused-vars: "off"

  # Stylistic issues.
  array-bracket-newline: [error, consistent]
  array-bracket-spacing: error
  block-spacing: error
  capitalized-comments: error
  comma-dangle: error
  comma-style: error
  computed-property-spacing: error
  consistent-this: [error, self]
  eol-last: error
  func-name-matching: error
  func-style: [error, declaration, {allowArrowFunctions: true}]
  key-spacing: error
  line-comment-position: error
  max-depth: error
  max-len: [error, {code: 200}]
  max-nested-callbacks: error
  max-statements-per-line: [error, {max: 3}]
  new-cap: [error, {capIsNew: false}]
  no-lonely-if: error
  no-mixed-operators: error
  no-multiple-empty-lines: error
  no-new-object: error
  no-tabs: [error, {allowIndentationTabs: true}]
  no-trailing-spaces: error
  no-unneeded-ternary: error
  no-whitespace-before-property: error
  object-curly-spacing: error
  one-var: [error, never]
  operator-assignment: error
  prefer-exponentiation-operator: error
  prefer-object-spread: error
  quote-props: [error, as-needed]
  semi-spacing: error
  semi-style: error
  sort-vars: error
  space-before-blocks: error
  space-in-parens: error
  space-infix-ops: error
  space-unary-ops: [error, {nonwords: false, words: true}]
  spaced-comment: error
  switch-colon-spacing: error
  template-tag-spacing: error
  unicode-bom: error

  # ECMAScript 6.
  arrow-body-style: error
  arrow-parens: [error, as-needed]
  arrow-spacing: error
  generator-star-spacing: error
  no-dupe-class-members: "off"
  no-duplicate-imports: error
  no-useless-computed-key: error
  no-useless-constructor: "off"
  no-useless-rename: error
  no-var: error
  object-shorthand: error
  prefer-arrow-callback: error
  prefer-const: error
  prefer-destructuring: error
  prefer-numeric-literals: error
  prefer-rest-params: error
  prefer-spread: error
  prefer-template: error
  rest-spread-spacing: error
  symbol-description: error
  template-curly-spacing: error
  yield-star-spacing: error

  # TypeScript: supported rules.
  "@typescript-eslint/array-type": [error, {default: array-simple}]
  "@typescript-eslint/ban-types": "off"
  "@typescript-eslint/camelcase": "off"
  "@typescript-eslint/class-literal-property-style": error
  "@typescript-eslint/explicit-function-return-type": [error, {allowExpressions: true}]
  "@typescript-eslint/explicit-member-accessibility": [error, {accessibility: no-public}]
  "@typescript-eslint/explicit-module-boundary-types": "off"
  "@typescript-eslint/member-ordering": [error , {default: [public-field, protected-field, private-field, constructor, public-method, protected-method, private-method]}]
  "@typescript-eslint/method-signature-style": error
  "@typescript-eslint/naming-convention": error
  "@typescript-eslint/no-dynamic-delete": error
  "@typescript-eslint/no-extraneous-class": error
  "@typescript-eslint/no-explicit-any": "off"
  "@typescript-eslint/no-floating-promises": error
  "@typescript-eslint/no-implied-eval": error
  "@typescript-eslint/no-inferrable-types": [error, {ignoreParameters: true, ignoreProperties: true}]
  "@typescript-eslint/no-invalid-void-type": error
  "@typescript-eslint/no-non-null-assertion": "off"
  "@typescript-eslint/no-require-imports": error
  "@typescript-eslint/no-throw-literal": error
  "@typescript-eslint/no-unnecessary-boolean-literal-compare": error
  "@typescript-eslint/no-unnecessary-condition": error
  "@typescript-eslint/no-unnecessary-qualifier": error
  "@typescript-eslint/no-unnecessary-type-arguments": error
  "@typescript-eslint/no-unsafe-assignment": "off"
  "@typescript-eslint/no-unsafe-call": "off"
  "@typescript-eslint/no-unsafe-member-access": "off"
  "@typescript-eslint/no-unsafe-return": "off"
  "@typescript-eslint/no-unused-vars-experimental": error
  "@typescript-eslint/prefer-as-const": error
  "@typescript-eslint/prefer-for-of": error
  "@typescript-eslint/prefer-function-type": error
  "@typescript-eslint/prefer-nullish-coalescing": error
  "@typescript-eslint/prefer-optional-chain": error
  "@typescript-eslint/prefer-readonly": error
  "@typescript-eslint/prefer-reduce-type-parameter": error
  "@typescript-eslint/require-array-sort-compare": error
  "@typescript-eslint/restrict-plus-operands": error
  "@typescript-eslint/restrict-template-expressions": "off"
  "@typescript-eslint/switch-exhaustiveness-check": error
  "@typescript-eslint/unbound-method": [error, {ignoreStatic: true}]
  "@typescript-eslint/unified-signatures": error

  # TypeScript: extension rules.
  "@typescript-eslint/brace-style": [error, stroustrup, {allowSingleLine: true}]
  "@typescript-eslint/comma-spacing": error
  "@typescript-eslint/default-param-last": error
  "@typescript-eslint/dot-notation": error
  "@typescript-eslint/func-call-spacing": error
  "@typescript-eslint/indent": [error, tab, {SwitchCase: 1}]
  "@typescript-eslint/keyword-spacing": error
  "@typescript-eslint/lines-between-class-members": error
  "@typescript-eslint/no-dupe-class-members": error
  "@typescript-eslint/no-extra-semi": error
  "@typescript-eslint/no-invalid-this": error
  "@typescript-eslint/no-use-before-define": [error, nofunc]
  "@typescript-eslint/no-useless-constructor": error
  "@typescript-eslint/quotes": [error, double, {avoidEscape: true}]
  "@typescript-eslint/return-await": error
  "@typescript-eslint/semi": error
  "@typescript-eslint/space-before-function-paren": [error, {anonymous: never, asyncArrow: always, named: never}]
